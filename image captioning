import torch
import torchvision.models as models
import torchvision.transforms as transforms
from PIL import Image

# Load the pre-trained ResNet model
model = models.resnet50(pretrained=True)
model.eval()  # Set the model to evaluation mode

# Remove the final classification layer
model = torch.nn.Sequential(*(list(model.children())[:-1]))

# Define the image transformations
preprocess = transforms.Compose([
    transforms.Resize(256),
    transforms.CenterCrop(224),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),
])

# Load and preprocess the image
img_path = 'path_to_your_image.jpg'
img = Image.open(img_path).convert('RGB')
img_tensor = preprocess(img).unsqueeze(0)  # Add a batch dimension

# Extract features from the image
with torch.no_grad():
    features = model(img_tensor)

# Flatten the features
features = features.view(features.size(0), -1)

print("Extracted features:", features)
